import { MigrationInterface, QueryRunner } from "typeorm";

export class AddAvatarPathToChatConversation1747024813781 implements MigrationInterface {
    name = 'AddAvatarPathToChatConversation1747024813781'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "temporary_post_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer, CONSTRAINT "unique_post_like" UNIQUE ("postId", "userId"))`);
        await queryRunner.query(`INSERT INTO "temporary_post_like"("id", "created_at", "postId", "userId") SELECT "id", "created_at", "postId", "userId" FROM "post_like"`);
        await queryRunner.query(`DROP TABLE "post_like"`);
        await queryRunner.query(`ALTER TABLE "temporary_post_like" RENAME TO "post_like"`);
        await queryRunner.query(`CREATE TABLE "temporary_comment_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "commentId" integer, "userId" integer, CONSTRAINT "unique_comment_like" UNIQUE ("commentId", "userId"))`);
        await queryRunner.query(`INSERT INTO "temporary_comment_like"("id", "created_at", "commentId", "userId") SELECT "id", "created_at", "commentId", "userId" FROM "comment_like"`);
        await queryRunner.query(`DROP TABLE "comment_like"`);
        await queryRunner.query(`ALTER TABLE "temporary_comment_like" RENAME TO "comment_like"`);
        await queryRunner.query(`CREATE TABLE "temporary_chat_conversation" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "is_group" boolean NOT NULL DEFAULT (false), "created_by" integer, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')))`);
        await queryRunner.query(`INSERT INTO "temporary_chat_conversation"("id", "name", "is_group", "created_by", "created_at", "updated_at") SELECT "id", "name", "is_group", "created_by", "created_at", "updated_at" FROM "chat_conversation"`);
        await queryRunner.query(`DROP TABLE "chat_conversation"`);
        await queryRunner.query(`ALTER TABLE "temporary_chat_conversation" RENAME TO "chat_conversation"`);
        await queryRunner.query(`CREATE TABLE "temporary_chat_participant" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "user_id" integer NOT NULL, "is_admin" boolean NOT NULL DEFAULT (false), "joined_at" datetime NOT NULL DEFAULT (datetime('now')))`);
        await queryRunner.query(`INSERT INTO "temporary_chat_participant"("id", "conversation_id", "user_id", "is_admin", "joined_at") SELECT "id", "conversation_id", "user_id", "is_admin", "joined_at" FROM "chat_participant"`);
        await queryRunner.query(`DROP TABLE "chat_participant"`);
        await queryRunner.query(`ALTER TABLE "temporary_chat_participant" RENAME TO "chat_participant"`);
        await queryRunner.query(`CREATE TABLE "temporary_chat_message" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "sender_id" integer NOT NULL, "content" text NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "is_read" boolean NOT NULL DEFAULT (false))`);
        await queryRunner.query(`INSERT INTO "temporary_chat_message"("id", "conversation_id", "sender_id", "content", "created_at", "is_read") SELECT "id", "conversation_id", "sender_id", "content", "created_at", "is_read" FROM "chat_message"`);
        await queryRunner.query(`DROP TABLE "chat_message"`);
        await queryRunner.query(`ALTER TABLE "temporary_chat_message" RENAME TO "chat_message"`);
        await queryRunner.query(`CREATE TABLE "temporary_post_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "temporary_post_like"("id", "created_at", "postId", "userId") SELECT "id", "created_at", "postId", "userId" FROM "post_like"`);
        await queryRunner.query(`DROP TABLE "post_like"`);
        await queryRunner.query(`ALTER TABLE "temporary_post_like" RENAME TO "post_like"`);
        await queryRunner.query(`CREATE TABLE "temporary_comment_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "commentId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "temporary_comment_like"("id", "created_at", "commentId", "userId") SELECT "id", "created_at", "commentId", "userId" FROM "comment_like"`);
        await queryRunner.query(`DROP TABLE "comment_like"`);
        await queryRunner.query(`ALTER TABLE "temporary_comment_like" RENAME TO "comment_like"`);
        await queryRunner.query(`CREATE TABLE "temporary_post_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "temporary_post_like"("id", "created_at", "postId", "userId") SELECT "id", "created_at", "postId", "userId" FROM "post_like"`);
        await queryRunner.query(`DROP TABLE "post_like"`);
        await queryRunner.query(`ALTER TABLE "temporary_post_like" RENAME TO "post_like"`);
        await queryRunner.query(`CREATE TABLE "temporary_comment_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "commentId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "temporary_comment_like"("id", "created_at", "commentId", "userId") SELECT "id", "created_at", "commentId", "userId" FROM "comment_like"`);
        await queryRunner.query(`DROP TABLE "comment_like"`);
        await queryRunner.query(`ALTER TABLE "temporary_comment_like" RENAME TO "comment_like"`);
        await queryRunner.query(`CREATE TABLE "temporary_chat_message" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "sender_id" integer NOT NULL, "content" text NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "is_read" boolean NOT NULL DEFAULT (false))`);
        await queryRunner.query(`INSERT INTO "temporary_chat_message"("id", "conversation_id", "sender_id", "content", "created_at", "is_read") SELECT "id", "conversation_id", "sender_id", "content", "created_at", "is_read" FROM "chat_message"`);
        await queryRunner.query(`DROP TABLE "chat_message"`);
        await queryRunner.query(`ALTER TABLE "temporary_chat_message" RENAME TO "chat_message"`);
        await queryRunner.query(`CREATE TABLE "temporary_post" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar NOT NULL, "content" varchar NOT NULL, "user_id" integer, "anonymous" boolean NOT NULL DEFAULT (0), "author" varchar, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "userId" integer, "originalAuthor" text, CONSTRAINT "FK_5c1cf55c308037b5aca1038a131" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_post"("id", "title", "content", "user_id", "anonymous", "author", "created_at", "userId", "originalAuthor") SELECT "id", "title", "content", "user_id", "anonymous", "author", "created_at", "userId", "originalAuthor" FROM "post"`);
        await queryRunner.query(`DROP TABLE "post"`);
        await queryRunner.query(`ALTER TABLE "temporary_post" RENAME TO "post"`);
        await queryRunner.query(`CREATE TABLE "temporary_comment" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "content" varchar NOT NULL, "user_id" integer, "anonymous" boolean NOT NULL DEFAULT (0), "author" varchar, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer, "originalAuthor" text, CONSTRAINT "FK_c0354a9a009d3bb45a08655ce3b" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_94a85bb16d24033a2afdd5df060" FOREIGN KEY ("postId") REFERENCES "post" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_comment"("id", "content", "user_id", "anonymous", "author", "created_at", "postId", "userId", "originalAuthor") SELECT "id", "content", "user_id", "anonymous", "author", "created_at", "postId", "userId", "originalAuthor" FROM "comment"`);
        await queryRunner.query(`DROP TABLE "comment"`);
        await queryRunner.query(`ALTER TABLE "temporary_comment" RENAME TO "comment"`);
        await queryRunner.query(`CREATE TABLE "temporary_chat_conversation" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "is_group" boolean NOT NULL DEFAULT (false), "created_by" integer, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "avatarPath" varchar(255))`);
        await queryRunner.query(`INSERT INTO "temporary_chat_conversation"("id", "name", "is_group", "created_by", "created_at", "updated_at") SELECT "id", "name", "is_group", "created_by", "created_at", "updated_at" FROM "chat_conversation"`);
        await queryRunner.query(`DROP TABLE "chat_conversation"`);
        await queryRunner.query(`ALTER TABLE "temporary_chat_conversation" RENAME TO "chat_conversation"`);
        await queryRunner.query(`CREATE TABLE "temporary_user" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "username" varchar NOT NULL, "password" varchar NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "isAdmin" boolean NOT NULL DEFAULT (0), "isMainAdmin" boolean NOT NULL DEFAULT (0), "email" varchar, "phone" varchar, "profileImage" varchar)`);
        await queryRunner.query(`INSERT INTO "temporary_user"("id", "username", "password", "created_at", "isAdmin", "isMainAdmin", "email", "phone", "profileImage") SELECT "id", "username", "password", "created_at", "isAdmin", "isMainAdmin", "email", "phone", "profileImage" FROM "user"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`ALTER TABLE "temporary_user" RENAME TO "user"`);
        await queryRunner.query(`CREATE TABLE "temporary_post" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar NOT NULL, "content" varchar NOT NULL, "user_id" integer, "anonymous" boolean NOT NULL DEFAULT (0), "author" varchar, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "userId" integer, "originalAuthor" varchar, CONSTRAINT "FK_5c1cf55c308037b5aca1038a131" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_post"("id", "title", "content", "user_id", "anonymous", "author", "created_at", "userId", "originalAuthor") SELECT "id", "title", "content", "user_id", "anonymous", "author", "created_at", "userId", "originalAuthor" FROM "post"`);
        await queryRunner.query(`DROP TABLE "post"`);
        await queryRunner.query(`ALTER TABLE "temporary_post" RENAME TO "post"`);
        await queryRunner.query(`CREATE TABLE "temporary_comment" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "content" varchar NOT NULL, "user_id" integer, "anonymous" boolean NOT NULL DEFAULT (0), "author" varchar, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer, "originalAuthor" varchar, CONSTRAINT "FK_c0354a9a009d3bb45a08655ce3b" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_94a85bb16d24033a2afdd5df060" FOREIGN KEY ("postId") REFERENCES "post" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_comment"("id", "content", "user_id", "anonymous", "author", "created_at", "postId", "userId", "originalAuthor") SELECT "id", "content", "user_id", "anonymous", "author", "created_at", "postId", "userId", "originalAuthor" FROM "comment"`);
        await queryRunner.query(`DROP TABLE "comment"`);
        await queryRunner.query(`ALTER TABLE "temporary_comment" RENAME TO "comment"`);
        await queryRunner.query(`CREATE TABLE "temporary_post_like" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "temporary_post_like"("id", "created_at", "postId", "userId") SELECT "id", "created_at", "postId", "userId" FROM "post_like"`);
        await queryRunner.query(`DROP TABLE "post_like"`);
        await queryRunner.query(`ALTER TABLE "temporary_post_like" RENAME TO "post_like"`);
        await queryRunner.query(`CREATE TABLE "temporary_comment_like" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "commentId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "temporary_comment_like"("id", "created_at", "commentId", "userId") SELECT "id", "created_at", "commentId", "userId" FROM "comment_like"`);
        await queryRunner.query(`DROP TABLE "comment_like"`);
        await queryRunner.query(`ALTER TABLE "temporary_comment_like" RENAME TO "comment_like"`);
        await queryRunner.query(`CREATE TABLE "temporary_chat_conversation" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "is_group" boolean NOT NULL DEFAULT (0), "created_by" integer, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "avatarPath" varchar(255))`);
        await queryRunner.query(`INSERT INTO "temporary_chat_conversation"("id", "name", "is_group", "created_by", "created_at", "updated_at", "avatarPath") SELECT "id", "name", "is_group", "created_by", "created_at", "updated_at", "avatarPath" FROM "chat_conversation"`);
        await queryRunner.query(`DROP TABLE "chat_conversation"`);
        await queryRunner.query(`ALTER TABLE "temporary_chat_conversation" RENAME TO "chat_conversation"`);
        await queryRunner.query(`CREATE TABLE "temporary_chat_participant" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "user_id" integer NOT NULL, "is_admin" boolean NOT NULL DEFAULT (0), "joined_at" datetime NOT NULL DEFAULT (datetime('now')))`);
        await queryRunner.query(`INSERT INTO "temporary_chat_participant"("id", "conversation_id", "user_id", "is_admin", "joined_at") SELECT "id", "conversation_id", "user_id", "is_admin", "joined_at" FROM "chat_participant"`);
        await queryRunner.query(`DROP TABLE "chat_participant"`);
        await queryRunner.query(`ALTER TABLE "temporary_chat_participant" RENAME TO "chat_participant"`);
        await queryRunner.query(`CREATE TABLE "temporary_chat_message" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "sender_id" integer NOT NULL, "content" varchar NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "is_read" boolean NOT NULL DEFAULT (0))`);
        await queryRunner.query(`INSERT INTO "temporary_chat_message"("id", "conversation_id", "sender_id", "content", "created_at", "is_read") SELECT "id", "conversation_id", "sender_id", "content", "created_at", "is_read" FROM "chat_message"`);
        await queryRunner.query(`DROP TABLE "chat_message"`);
        await queryRunner.query(`ALTER TABLE "temporary_chat_message" RENAME TO "chat_message"`);
        await queryRunner.query(`CREATE TABLE "temporary_post_like" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer, CONSTRAINT "FK_789b3f929eb3d8760419f87c8a9" FOREIGN KEY ("postId") REFERENCES "post" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_909fc474ef645901d01f0cc0662" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_post_like"("id", "created_at", "postId", "userId") SELECT "id", "created_at", "postId", "userId" FROM "post_like"`);
        await queryRunner.query(`DROP TABLE "post_like"`);
        await queryRunner.query(`ALTER TABLE "temporary_post_like" RENAME TO "post_like"`);
        await queryRunner.query(`CREATE TABLE "temporary_comment_like" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "commentId" integer, "userId" integer, CONSTRAINT "FK_a253dba95eab8659c027bbace44" FOREIGN KEY ("commentId") REFERENCES "comment" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_b5a2fc7a9a2b6bcc8c74f6fbb8b" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_comment_like"("id", "created_at", "commentId", "userId") SELECT "id", "created_at", "commentId", "userId" FROM "comment_like"`);
        await queryRunner.query(`DROP TABLE "comment_like"`);
        await queryRunner.query(`ALTER TABLE "temporary_comment_like" RENAME TO "comment_like"`);
        await queryRunner.query(`CREATE TABLE "temporary_chat_conversation" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "is_group" boolean NOT NULL DEFAULT (0), "created_by" integer, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "avatarPath" varchar(255), CONSTRAINT "FK_d34e11cb1f5ca9f97137dc4c0eb" FOREIGN KEY ("created_by") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_chat_conversation"("id", "name", "is_group", "created_by", "created_at", "updated_at", "avatarPath") SELECT "id", "name", "is_group", "created_by", "created_at", "updated_at", "avatarPath" FROM "chat_conversation"`);
        await queryRunner.query(`DROP TABLE "chat_conversation"`);
        await queryRunner.query(`ALTER TABLE "temporary_chat_conversation" RENAME TO "chat_conversation"`);
        await queryRunner.query(`CREATE TABLE "temporary_chat_participant" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "user_id" integer NOT NULL, "is_admin" boolean NOT NULL DEFAULT (0), "joined_at" datetime NOT NULL DEFAULT (datetime('now')), CONSTRAINT "FK_692c1bac4ee5ac4180771c22944" FOREIGN KEY ("conversation_id") REFERENCES "chat_conversation" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_d81d31d6cf105fb83b76e8fa5a8" FOREIGN KEY ("user_id") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_chat_participant"("id", "conversation_id", "user_id", "is_admin", "joined_at") SELECT "id", "conversation_id", "user_id", "is_admin", "joined_at" FROM "chat_participant"`);
        await queryRunner.query(`DROP TABLE "chat_participant"`);
        await queryRunner.query(`ALTER TABLE "temporary_chat_participant" RENAME TO "chat_participant"`);
        await queryRunner.query(`CREATE TABLE "temporary_chat_message" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "sender_id" integer NOT NULL, "content" varchar NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "is_read" boolean NOT NULL DEFAULT (0), CONSTRAINT "FK_aa14fc981646b7f4806f8b2b379" FOREIGN KEY ("conversation_id") REFERENCES "chat_conversation" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_bd00cce706735f1c4d05c69a310" FOREIGN KEY ("sender_id") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_chat_message"("id", "conversation_id", "sender_id", "content", "created_at", "is_read") SELECT "id", "conversation_id", "sender_id", "content", "created_at", "is_read" FROM "chat_message"`);
        await queryRunner.query(`DROP TABLE "chat_message"`);
        await queryRunner.query(`ALTER TABLE "temporary_chat_message" RENAME TO "chat_message"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "chat_message" RENAME TO "temporary_chat_message"`);
        await queryRunner.query(`CREATE TABLE "chat_message" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "sender_id" integer NOT NULL, "content" varchar NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "is_read" boolean NOT NULL DEFAULT (0))`);
        await queryRunner.query(`INSERT INTO "chat_message"("id", "conversation_id", "sender_id", "content", "created_at", "is_read") SELECT "id", "conversation_id", "sender_id", "content", "created_at", "is_read" FROM "temporary_chat_message"`);
        await queryRunner.query(`DROP TABLE "temporary_chat_message"`);
        await queryRunner.query(`ALTER TABLE "chat_participant" RENAME TO "temporary_chat_participant"`);
        await queryRunner.query(`CREATE TABLE "chat_participant" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "user_id" integer NOT NULL, "is_admin" boolean NOT NULL DEFAULT (0), "joined_at" datetime NOT NULL DEFAULT (datetime('now')))`);
        await queryRunner.query(`INSERT INTO "chat_participant"("id", "conversation_id", "user_id", "is_admin", "joined_at") SELECT "id", "conversation_id", "user_id", "is_admin", "joined_at" FROM "temporary_chat_participant"`);
        await queryRunner.query(`DROP TABLE "temporary_chat_participant"`);
        await queryRunner.query(`ALTER TABLE "chat_conversation" RENAME TO "temporary_chat_conversation"`);
        await queryRunner.query(`CREATE TABLE "chat_conversation" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "is_group" boolean NOT NULL DEFAULT (0), "created_by" integer, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "avatarPath" varchar(255))`);
        await queryRunner.query(`INSERT INTO "chat_conversation"("id", "name", "is_group", "created_by", "created_at", "updated_at", "avatarPath") SELECT "id", "name", "is_group", "created_by", "created_at", "updated_at", "avatarPath" FROM "temporary_chat_conversation"`);
        await queryRunner.query(`DROP TABLE "temporary_chat_conversation"`);
        await queryRunner.query(`ALTER TABLE "comment_like" RENAME TO "temporary_comment_like"`);
        await queryRunner.query(`CREATE TABLE "comment_like" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "commentId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "comment_like"("id", "created_at", "commentId", "userId") SELECT "id", "created_at", "commentId", "userId" FROM "temporary_comment_like"`);
        await queryRunner.query(`DROP TABLE "temporary_comment_like"`);
        await queryRunner.query(`ALTER TABLE "post_like" RENAME TO "temporary_post_like"`);
        await queryRunner.query(`CREATE TABLE "post_like" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "post_like"("id", "created_at", "postId", "userId") SELECT "id", "created_at", "postId", "userId" FROM "temporary_post_like"`);
        await queryRunner.query(`DROP TABLE "temporary_post_like"`);
        await queryRunner.query(`ALTER TABLE "chat_message" RENAME TO "temporary_chat_message"`);
        await queryRunner.query(`CREATE TABLE "chat_message" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "sender_id" integer NOT NULL, "content" text NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "is_read" boolean NOT NULL DEFAULT (false))`);
        await queryRunner.query(`INSERT INTO "chat_message"("id", "conversation_id", "sender_id", "content", "created_at", "is_read") SELECT "id", "conversation_id", "sender_id", "content", "created_at", "is_read" FROM "temporary_chat_message"`);
        await queryRunner.query(`DROP TABLE "temporary_chat_message"`);
        await queryRunner.query(`ALTER TABLE "chat_participant" RENAME TO "temporary_chat_participant"`);
        await queryRunner.query(`CREATE TABLE "chat_participant" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "user_id" integer NOT NULL, "is_admin" boolean NOT NULL DEFAULT (false), "joined_at" datetime NOT NULL DEFAULT (datetime('now')))`);
        await queryRunner.query(`INSERT INTO "chat_participant"("id", "conversation_id", "user_id", "is_admin", "joined_at") SELECT "id", "conversation_id", "user_id", "is_admin", "joined_at" FROM "temporary_chat_participant"`);
        await queryRunner.query(`DROP TABLE "temporary_chat_participant"`);
        await queryRunner.query(`ALTER TABLE "chat_conversation" RENAME TO "temporary_chat_conversation"`);
        await queryRunner.query(`CREATE TABLE "chat_conversation" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "is_group" boolean NOT NULL DEFAULT (false), "created_by" integer, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "avatarPath" varchar(255))`);
        await queryRunner.query(`INSERT INTO "chat_conversation"("id", "name", "is_group", "created_by", "created_at", "updated_at", "avatarPath") SELECT "id", "name", "is_group", "created_by", "created_at", "updated_at", "avatarPath" FROM "temporary_chat_conversation"`);
        await queryRunner.query(`DROP TABLE "temporary_chat_conversation"`);
        await queryRunner.query(`ALTER TABLE "comment_like" RENAME TO "temporary_comment_like"`);
        await queryRunner.query(`CREATE TABLE "comment_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "commentId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "comment_like"("id", "created_at", "commentId", "userId") SELECT "id", "created_at", "commentId", "userId" FROM "temporary_comment_like"`);
        await queryRunner.query(`DROP TABLE "temporary_comment_like"`);
        await queryRunner.query(`ALTER TABLE "post_like" RENAME TO "temporary_post_like"`);
        await queryRunner.query(`CREATE TABLE "post_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "post_like"("id", "created_at", "postId", "userId") SELECT "id", "created_at", "postId", "userId" FROM "temporary_post_like"`);
        await queryRunner.query(`DROP TABLE "temporary_post_like"`);
        await queryRunner.query(`ALTER TABLE "comment" RENAME TO "temporary_comment"`);
        await queryRunner.query(`CREATE TABLE "comment" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "content" varchar NOT NULL, "user_id" integer, "anonymous" boolean NOT NULL DEFAULT (0), "author" varchar, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer, "originalAuthor" text, CONSTRAINT "FK_c0354a9a009d3bb45a08655ce3b" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_94a85bb16d24033a2afdd5df060" FOREIGN KEY ("postId") REFERENCES "post" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "comment"("id", "content", "user_id", "anonymous", "author", "created_at", "postId", "userId", "originalAuthor") SELECT "id", "content", "user_id", "anonymous", "author", "created_at", "postId", "userId", "originalAuthor" FROM "temporary_comment"`);
        await queryRunner.query(`DROP TABLE "temporary_comment"`);
        await queryRunner.query(`ALTER TABLE "post" RENAME TO "temporary_post"`);
        await queryRunner.query(`CREATE TABLE "post" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar NOT NULL, "content" varchar NOT NULL, "user_id" integer, "anonymous" boolean NOT NULL DEFAULT (0), "author" varchar, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "userId" integer, "originalAuthor" text, CONSTRAINT "FK_5c1cf55c308037b5aca1038a131" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "post"("id", "title", "content", "user_id", "anonymous", "author", "created_at", "userId", "originalAuthor") SELECT "id", "title", "content", "user_id", "anonymous", "author", "created_at", "userId", "originalAuthor" FROM "temporary_post"`);
        await queryRunner.query(`DROP TABLE "temporary_post"`);
        await queryRunner.query(`ALTER TABLE "user" RENAME TO "temporary_user"`);
        await queryRunner.query(`CREATE TABLE "user" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "username" varchar NOT NULL, "password" varchar NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "isAdmin" boolean NOT NULL DEFAULT (false), "isMainAdmin" boolean NOT NULL DEFAULT (false), "email" varchar, "phone" varchar, "profileImage" varchar)`);
        await queryRunner.query(`INSERT INTO "user"("id", "username", "password", "created_at", "isAdmin", "isMainAdmin", "email", "phone", "profileImage") SELECT "id", "username", "password", "created_at", "isAdmin", "isMainAdmin", "email", "phone", "profileImage" FROM "temporary_user"`);
        await queryRunner.query(`DROP TABLE "temporary_user"`);
        await queryRunner.query(`ALTER TABLE "chat_conversation" RENAME TO "temporary_chat_conversation"`);
        await queryRunner.query(`CREATE TABLE "chat_conversation" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "is_group" boolean NOT NULL DEFAULT (false), "created_by" integer, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')))`);
        await queryRunner.query(`INSERT INTO "chat_conversation"("id", "name", "is_group", "created_by", "created_at", "updated_at") SELECT "id", "name", "is_group", "created_by", "created_at", "updated_at" FROM "temporary_chat_conversation"`);
        await queryRunner.query(`DROP TABLE "temporary_chat_conversation"`);
        await queryRunner.query(`ALTER TABLE "comment" RENAME TO "temporary_comment"`);
        await queryRunner.query(`CREATE TABLE "comment" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "content" varchar NOT NULL, "user_id" integer, "anonymous" boolean NOT NULL DEFAULT (0), "author" varchar, "likes" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer, "originalAuthor" text, CONSTRAINT "FK_c0354a9a009d3bb45a08655ce3b" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_94a85bb16d24033a2afdd5df060" FOREIGN KEY ("postId") REFERENCES "post" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "comment"("id", "content", "user_id", "anonymous", "author", "created_at", "postId", "userId", "originalAuthor") SELECT "id", "content", "user_id", "anonymous", "author", "created_at", "postId", "userId", "originalAuthor" FROM "temporary_comment"`);
        await queryRunner.query(`DROP TABLE "temporary_comment"`);
        await queryRunner.query(`ALTER TABLE "post" RENAME TO "temporary_post"`);
        await queryRunner.query(`CREATE TABLE "post" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar NOT NULL, "content" varchar NOT NULL, "user_id" integer, "anonymous" boolean NOT NULL DEFAULT (0), "author" varchar, "likes" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "userId" integer, "originalAuthor" text, CONSTRAINT "FK_5c1cf55c308037b5aca1038a131" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "post"("id", "title", "content", "user_id", "anonymous", "author", "created_at", "userId", "originalAuthor") SELECT "id", "title", "content", "user_id", "anonymous", "author", "created_at", "userId", "originalAuthor" FROM "temporary_post"`);
        await queryRunner.query(`DROP TABLE "temporary_post"`);
        await queryRunner.query(`ALTER TABLE "chat_message" RENAME TO "temporary_chat_message"`);
        await queryRunner.query(`CREATE TABLE "chat_message" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "sender_id" integer NOT NULL, "content" text NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "is_read" boolean NOT NULL DEFAULT (false))`);
        await queryRunner.query(`INSERT INTO "chat_message"("id", "conversation_id", "sender_id", "content", "created_at", "is_read") SELECT "id", "conversation_id", "sender_id", "content", "created_at", "is_read" FROM "temporary_chat_message"`);
        await queryRunner.query(`DROP TABLE "temporary_chat_message"`);
        await queryRunner.query(`ALTER TABLE "comment_like" RENAME TO "temporary_comment_like"`);
        await queryRunner.query(`CREATE TABLE "comment_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "commentId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "comment_like"("id", "created_at", "commentId", "userId") SELECT "id", "created_at", "commentId", "userId" FROM "temporary_comment_like"`);
        await queryRunner.query(`DROP TABLE "temporary_comment_like"`);
        await queryRunner.query(`ALTER TABLE "post_like" RENAME TO "temporary_post_like"`);
        await queryRunner.query(`CREATE TABLE "post_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "post_like"("id", "created_at", "postId", "userId") SELECT "id", "created_at", "postId", "userId" FROM "temporary_post_like"`);
        await queryRunner.query(`DROP TABLE "temporary_post_like"`);
        await queryRunner.query(`ALTER TABLE "comment_like" RENAME TO "temporary_comment_like"`);
        await queryRunner.query(`CREATE TABLE "comment_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "commentId" integer, "userId" integer, CONSTRAINT "unique_comment_like" UNIQUE ("commentId", "userId"))`);
        await queryRunner.query(`INSERT INTO "comment_like"("id", "created_at", "commentId", "userId") SELECT "id", "created_at", "commentId", "userId" FROM "temporary_comment_like"`);
        await queryRunner.query(`DROP TABLE "temporary_comment_like"`);
        await queryRunner.query(`ALTER TABLE "post_like" RENAME TO "temporary_post_like"`);
        await queryRunner.query(`CREATE TABLE "post_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer, CONSTRAINT "unique_post_like" UNIQUE ("postId", "userId"))`);
        await queryRunner.query(`INSERT INTO "post_like"("id", "created_at", "postId", "userId") SELECT "id", "created_at", "postId", "userId" FROM "temporary_post_like"`);
        await queryRunner.query(`DROP TABLE "temporary_post_like"`);
        await queryRunner.query(`ALTER TABLE "chat_message" RENAME TO "temporary_chat_message"`);
        await queryRunner.query(`CREATE TABLE "chat_message" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "sender_id" integer NOT NULL, "content" text NOT NULL, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "is_read" boolean NOT NULL DEFAULT (false), CONSTRAINT "FK_bd00cce706735f1c4d05c69a310" FOREIGN KEY ("sender_id") REFERENCES "user" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_aa14fc981646b7f4806f8b2b379" FOREIGN KEY ("conversation_id") REFERENCES "chat_conversation" ("id") ON DELETE CASCADE ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "chat_message"("id", "conversation_id", "sender_id", "content", "created_at", "is_read") SELECT "id", "conversation_id", "sender_id", "content", "created_at", "is_read" FROM "temporary_chat_message"`);
        await queryRunner.query(`DROP TABLE "temporary_chat_message"`);
        await queryRunner.query(`ALTER TABLE "chat_participant" RENAME TO "temporary_chat_participant"`);
        await queryRunner.query(`CREATE TABLE "chat_participant" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "conversation_id" integer NOT NULL, "user_id" integer NOT NULL, "is_admin" boolean NOT NULL DEFAULT (false), "joined_at" datetime NOT NULL DEFAULT (datetime('now')), CONSTRAINT "FK_d81d31d6cf105fb83b76e8fa5a8" FOREIGN KEY ("user_id") REFERENCES "user" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_692c1bac4ee5ac4180771c22944" FOREIGN KEY ("conversation_id") REFERENCES "chat_conversation" ("id") ON DELETE CASCADE ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "chat_participant"("id", "conversation_id", "user_id", "is_admin", "joined_at") SELECT "id", "conversation_id", "user_id", "is_admin", "joined_at" FROM "temporary_chat_participant"`);
        await queryRunner.query(`DROP TABLE "temporary_chat_participant"`);
        await queryRunner.query(`ALTER TABLE "chat_conversation" RENAME TO "temporary_chat_conversation"`);
        await queryRunner.query(`CREATE TABLE "chat_conversation" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "is_group" boolean NOT NULL DEFAULT (false), "created_by" integer, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), CONSTRAINT "FK_d34e11cb1f5ca9f97137dc4c0eb" FOREIGN KEY ("created_by") REFERENCES "user" ("id") ON DELETE SET NULL ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "chat_conversation"("id", "name", "is_group", "created_by", "created_at", "updated_at") SELECT "id", "name", "is_group", "created_by", "created_at", "updated_at" FROM "temporary_chat_conversation"`);
        await queryRunner.query(`DROP TABLE "temporary_chat_conversation"`);
        await queryRunner.query(`ALTER TABLE "comment_like" RENAME TO "temporary_comment_like"`);
        await queryRunner.query(`CREATE TABLE "comment_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "commentId" integer, "userId" integer, CONSTRAINT "unique_comment_like" UNIQUE ("commentId", "userId"), CONSTRAINT "FK_comment_like_user" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_comment_like_comment" FOREIGN KEY ("commentId") REFERENCES "comment" ("id") ON DELETE CASCADE ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "comment_like"("id", "created_at", "commentId", "userId") SELECT "id", "created_at", "commentId", "userId" FROM "temporary_comment_like"`);
        await queryRunner.query(`DROP TABLE "temporary_comment_like"`);
        await queryRunner.query(`ALTER TABLE "post_like" RENAME TO "temporary_post_like"`);
        await queryRunner.query(`CREATE TABLE "post_like" ("id" integer PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL DEFAULT (datetime('now')), "postId" integer, "userId" integer, CONSTRAINT "unique_post_like" UNIQUE ("postId", "userId"), CONSTRAINT "FK_post_like_user" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE CASCADE ON UPDATE NO ACTION, CONSTRAINT "FK_post_like_post" FOREIGN KEY ("postId") REFERENCES "post" ("id") ON DELETE CASCADE ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "post_like"("id", "created_at", "postId", "userId") SELECT "id", "created_at", "postId", "userId" FROM "temporary_post_like"`);
        await queryRunner.query(`DROP TABLE "temporary_post_like"`);
    }

}
